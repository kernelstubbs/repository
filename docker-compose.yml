---
version: "3.7"

x-defaultCONF: &defaultCONF
  env_file: [./env/global.env]
x-deploySingle: &deploySingle
  replicas: 1
  update_config:
    failure_action: rollback
  placement:
      constraints: [node.role == manager]

x-driver_opts: &driverOpts
  type: nfs
  o: addr=10.10.10.252,rw,bg,intr,soft,nolock
x-nfs-driver: &nfsDriver
  driver: local

services:
#  minecraft:
#    image: itzg/minecraft-server
#    hostname: forge
#    env_file: [./env/forge.env]
#    ports:
#      - "28016:28016"
#      - "25565:25565"
#    networks: [forge-net]
#    volumes: ["forge_mc:/data"]
#  rcon:
#    image: itzg/rcon
#    ports:
#      - "4326:4326"
#     - "4327:4327"
#   networks: [forge-net]
#    volumes: ["rcon:/opt/rcon-web-admin/db"]
  traefik:
    image: traefik
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    <<: *defaultCONF
    deploy:
      <<: *deploySingle
      labels: 
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.entrypoints=web"
        - "traefik.http.routers.traefik.rule=PathPrefix(`/traefik`)"
        - "traefik.http.middlewares.traefik-redirect.redirectregex.regex=^(.*)/traefik$$"
        - "traefik.http.middlewares.traefik-redirect.redirectregex.replacement=$$1/traefik/"
        - "traefik.http.middlewares.traefik-strip.stripprefix.prefixes=/traefik/"
        - "traefik.http.routers.traefik.middlewares=traefik-strip,traefik-redirect"   
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - torrent-net
      - radarr-net
      - sonarr-net
      - port-net
      - plex-net
      - forge-net
    volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
  plex:
    image: plexinc/pms-docker
    <<: *defaultCONF
    deploy:
      <<: *deploySingle
      labels: 
        - "traefik.enable=true"
        - "traefik.http.routers.plex.entrypoints=web"
        - "traefik.http.routers.plex.rule=PathPrefix(`/plex`) || PathPrefix(`/web`)"
        - "traefik.http.middlewares.plex-redirect.redirectregex.regex=^(.*)/(plex|web)$$"
        - "traefik.http.middlewares.plex-redirect.redirectregex.replacement=$$1/web/"
        - "traefik.http.routers.plex.middlewares=plex-redirect"
        - "traefik.http.services.plex.loadbalancer.server.port=32400"
        - "traefik.docker.network=homelab_plex-net"
    ports:
      - "3005:3005"
      - "8324:8324"
      - "32400:32400"
      - "32469:32469"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412-32414:32412-32414/udp"
    networks: [plex-net]
    volumes: 
      - plex_cfg:/config
      - plex_lib:/data
      - tmp:/transcode
  watchtower:
    image: v2tec/watchtower
    command: --cleanup --schedule "0 0 3 * * *"
    <<: *defaultCONF
    volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
  sonarr:
    image: linuxserver/sonarr
    <<: *defaultCONF
    deploy:
      <<: *default-single-replica-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.sonarr.entrypoints=web"
        - "traefik.http.routers.sonarr.rule=PathPrefix(`/sonarr`)"    
        - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
        - "traefik.docker.network=homelab_sonarr-net"
    networks:
      - sonarr-net
      - torrent-net
      - plex-net
    volumes:
      - sonarr_cfg:/config
      - plex_tv:/tv
      - downloads:/downloads
  radarr:
    image: linuxserver/radarr
    <<: *defaultCONF
    deploy:
      <<: *default-single-replica-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.radarr.entrypoints=web"
        - "traefik.http.routers.radarr.rule=PathPrefix(`/radarr`)"
        - "traefik.http.services.radarr.loadbalancer.server.port=7878"
        - "traefik.docker.network=homelab_radarr-net"
    networks:
      - radarr-net
      - torrent-net
      - plex-net
    volumes:
      - radarr_cfg:/config
      - plex_movies:/movies
      - downloads:/downloads
  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    <<: *defaultCONF
    deploy:
      <<: *deploySingle
      labels:
        - "traefik.enable=true"
        # adding a slash to the end
        - "traefik.http.routers.portainer.entrypoints=web"
        - "traefik.http.routers.portainer.rule=PathPrefix(`/portainer`)"
        - "traefik.http.middlewares.portainer-redirect.redirectregex.regex=^(.*)/portainer$$"
        - "traefik.http.middlewares.portainer-redirect.redirectregex.replacement=$$1/portainer/"
        - "traefik.http.middlewares.portainer-strip.stripprefix.prefixes=/portainer/"
        - "traefik.http.routers.portainer.middlewares=portainer-strip,portainer-redirect"    
        - "traefik.http.services.potainer.loadbalancer.server.port=9000"
        - "traefik.docker.network=homelab_port-net"
    networks: [port-net]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_dat:/data
  vpn:
    image: bubuntux/nordvpn
    <<: *defaultCONF
    env_file: [./env/nordvpn.env] 
    deploy:
      <<: *deploySingle
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.jackett.entrypoints=web"
        - "traefik.http.routers.jackett.rule=PathPrefix(`/jackett`)"
        - "traefik.http.middlewares.jackett-strip.stripprefix.prefixes=/jackett"
        - "traefik.http.routers.jackett.middlewares=jackett-strip"      
        - "traefik.http.services.jackett.loadbalancer.server.port=9117"
        - "traefik.docker.network=homelab_torrent-net"
        - "traefik.http.routers.deluge.rule=PathPrefix(`/deluge`)"
        - "traefik.http.middlewares.deluge-strip.stripprefix.prefixes=/deluge"
        - "traefik.http.routers.deluge.middlewares=deluge-strip"      
        - "traefik.http.services.deluge.loadbalancer.server.port=8112"
        - "traefik.docker.network=homelab_torrent-net"
    ports:
#      - "9117:9117" # jackett
#      - "8112:8112" # deluge
      - "8118:8118" # vpn
      - "58846:58846"
      - "58946:58946"
    networks: [torrent-net]
    devices: [/dev/net/tun]
  deluge:
    image: linuxserver/deluge
    <<: *defaultCONF
    deploy:
      <<: *deploySingle
    volumes:
      - deluge_cfg:/config
      - downloads:/downloads
    network_mode: service:vpn
  jackett:
    image: linuxserver/jackett
    <<: *defaultCONF
    deploy:
      <<: *deploySingle
    volumes:
      - jackett_cfg:/config
      - tmp:/downloads
    network_mode: service:vpn

networks:
  sonarr-net:
  torrent-net:
  port-net:
  plex-net:
  forge-net:

volumes:
  forge_mc: 
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/forge/data"
  rcon: 
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/rcon/db"
  radarr_cfg: 
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/radarr/config"
  sonarr_cfg:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/sonarr/config"
  jackett_cfg:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/jackett/config"
  deluge_cfg:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/deluge/config"
  downloads:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/downloads"
  plex_tv:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/plex/library/television"
  plex_movies:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/plex/library/movies"
  plex_lib:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/plex/library"
  plex_cfg:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/plex/config"
  nginx_cfg:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/nginx/config"
  tmp:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/tmp"
  portainer_dat:
    <<: *nfsDriver
    driver_opts:
      <<: *driverOpts
      device: ":/volume1/docker/portainer/data"