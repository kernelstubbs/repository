version: "3.7"

x-defaultCONF: &defaultCONF
  domainname: beowulf.cc
  restart: unless-stopped

x-networkCONF: &networkCONF
    driver: local
    driver_opts:
      type: nfs
      o: addr=${NAS},rw,bg,intr,soft,nolock

services:
  plex:
    container_name: plex
    image: plexinc/pms-docker
    hostname: plex
    <<: *defaultCONF
    env_file:
      - ./env/global.env
    ports:
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32400:32400/tcp
      - 32469:32469/tcp
#      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    networks:
      - plex-net
    volumes:
      - PlexCFG:/config
      - PlexLib:/data
      - TMP:/transcode

  watchtower:
    container_name: watchtower
    image: v2tec/watchtower
    <<: *defaultCONF
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    #check at 3am only
    command: --cleanup --schedule "0 0 3 * * *"

  pihole:
    container_name: pihole
    image: pihole/pihole
    hostname: pihole
    <<: *defaultCONF
    env_file:
      - ./env/pihole.env
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
#      - 8888:80/tcp
#      - 4444:443/tcp
    networks:
      - piHole-net
    volumes:
      - PiETC:/etc/pihole/
      - PiMasq:/etc/dnsmasq.d/

  netdata:
    container_name: netdata
    image: netdata/netdata
    hostname: netdata
    <<: *defaultCONF
    environment:
      - PGID=999
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    networks:
      - net-net
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    hostname: sonarr
    <<: *defaultCONF
    env_file:
      - ./env/global.env
    ports:
      - 8989:8989
    networks:
      - torrent-net
      - plex-net
    volumes:
      - SonarrCFG:/config
      - PlexTV:/tv
      - Downloads:/downloads

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    hostname: radarr
    <<: *defaultCONF
    env_file:
    - ./env/global.env
    ports:
      - 7878:7878
    networks:
      - torrent-net
      - plex-net
    volumes:
      - RadarrCFG:/config
      - PlexMovies:/movies
      - Downloads:/downloads

  portainer:
    container_name: portainer
    image: portainer/portainer
    hostname: portainer
    <<: *defaultCONF
    command: -H unix:///var/run/docker.sock
    env_file:
    - ./env/global.env
    ports:
      - 9000:9000
    networks:
      - port-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - PortainerDAT:/data

  nginx:
    image: linuxserver/letsencrypt
    container_name: nginx
    <<: *defaultCONF
    cap_add:
      - NET_ADMIN
    env_file:
      - ./env/nginx.env
    volumes:
      - NginxCFG:/config
    ports:
      - 80:80
      - 443:443
    networks:
      - torrent-net
      - port-net
      - plex-net
      - piHole-net
      - net-net

  ### VPN and Subcontainers

  vpn:
    container_name: vpn
    image: bubuntux/nordvpn
    hostname: vpn
    <<: *defaultCONF
    env_file:
      ./env/nordvpn.env
    ports:
      - 9117:9117 # jackett
      - 8112:8112 # deluge
      - 8118:8118 #
      - 58846:58846
      - 58946:58946
    networks:
      - torrent-net
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun

  deluge:
    container_name: deluge
    image: linuxserver/deluge
    <<: *defaultCONF
    depends_on:
      - vpn
    env_file:
      - ./env/global.env
    volumes:
      - DelugeCFG:/config
      - Downloads:/downloads
    network_mode: service:vpn

  jackett:
    container_name: jackett
    image: linuxserver/jackett
    <<: *defaultCONF
    depends_on:
      - vpn
    env_file:
      - ./env/global.env
    volumes:
      - JackettCFG:/config
      - TMP:/downloads
    network_mode: service:vpn

networks:
  piHole-net:
    driver: bridge
  torrent-net:
    driver: bridge
  port-net:
    driver: bridge
  plex-net:
    driver: bridge
  net-net:
    driver: bridge

volumes:
  RadarrCFG:
    <<: *networkCONF
    driver_opts:
      device: ":${NASROOT}/radarr/config"
  SonarrCFG:
    <<: *networkCONF
    driver_opts:
      device: ":${NASROOT}/sonarr/config"
  JackettCFG:
    <<: *networkCONF
    driver_opts:
      device: ":${NASROOT}/jackett/config"
  DelugeCFG:
    <<: *networkCONF
    driver_opts:
      device: ":${NASROOT}/deluge/config"
  Downloads:
    <<: *networkCONF
    driver_opts:
        device: ":${NASROOT}/downloads"
  PlexTV:
    <<: *networkCONF
    driver_opts:
        device: ":${NASROOT}/plex/library/television"
  PlexMovies:
    <<: *networkCONF
    driver_opts:
        device: ":${NASROOT}/plex/library/movies"
  PlexLib:
    <<: *networkCONF
    driver_opts:
        device: ":${NASROOT}/plex/library"
  PlexCFG:
    <<: *networkCONF
    driver_opts:
        device: ":${NASROOT}/plex/config"
  NginxCFG:
    <<: *networkCONF
    driver_opts:
        device: ":${NASROOT}/nginx/config"
  TMP:
    <<: *networkCONF
    driver_opts:
        device: ":${NASROOT}/tmp"
  PiETC:
    <<: *networkCONF
    driver_opts:
        device: ":${NASROOT}/pihole/etc-pihole/"
  PiMasq:
    <<: *networkCONF
    driver_opts:
        device: ":${NASROOT}/pihole/etc-dnsmasq.d/"
  PortainerDAT:
    <<: *networkCONF
    driver_opts:
      device: ":${NASROOT}/portainer/data"